spring:
  datasource:
    url: jdbc:h2:mem:testdb               # Usa il DB H2 in memoria, chiamato "testdb"
    driver-class-name: org.h2.Driver      # Driver H2
    username: sa                          # Utente predefinito
    password: ""                          # Password vuota (default)
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create                    # Hibernate crea/aggiorna le tabelle in base alle Entity
  sql:
    init:
      mode: always
  h2:
    console:
      enabled: true                       # Abilita la console web di H2
      path: /h2-console                   # Raggiungibile su http://localhost:8080/h2-console
  logging:
    level:
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  redis:
    host: localhost
    port: 6379
  resilience4j:
    circuitbreaker:
      instances:
        default:
          failureRateThreshold: 50
          waitDurationInOpenState: 60s
          slidingWindowSize: 5
    retry:
      instances:
        default:
          maxAttempts: 3
          waitDuration: 2s

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} trace_id=%X{trace_id} span_id=%X{span_id} - %msg%n"
  level:
    root: INFO
    financial: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.data.redis: DEBUG

spring.application.name: financial-api
management.tracing:
  sampling:
    probability: 1.0
  enabled: true
